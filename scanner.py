#!/usr/bin/env python

import requests
import urlparse
import re
from bs4 import BeautifulSoup

class Scanner:
    def __init__(self,url,ignor_url_list):
        self.session = requests.Session()
        self.target_url = url
        self.target_links = []
        self.ignor_list = ignor_url_list 

    def extract_link_from(self,url):
        request = self.session.get(url)
        return re.findall('(?:href=")(.*?)"',request.content)
    def crawler(self,url=None):
        if url == None:
            url = self.target_url   
        href_links = self.extract_link_from(url)
        for link in href_links:
            link = urlparse.urljoin(url,link)
            if "#" in link:
                 link = link.split("#")[0]

            if self.target_url in link and link not in self.target_links and link  not in self.ignor_list:
                self.target_links.append(link)
                print(link)
                self.crawler(link)

    def extract_form(self,url):
        response = self.session.get(url)
        parsed_html = BeautifulSoup(response.content,features="html.parser")
        return parsed_html.findAll("form")

    def submit_form(self,form,value,url):

            action = form.get("action")
            post_url = urlparse.urljoin(url,action)
            method = form.get("method")

            input_list = form.findAll("input")
            post_data = {}
            for input in input_list:
                name = input.get("name")
                type = input.get("type")
                input_value = input.get("value")
                if type == "text":
                    input_value = value
                post_data[name] = input_value
            if method == "post":
                return self.session.post(post_url,data=post_data)
            return self.session.get(post_url,params=post_data)

    def run_scanner(self):
        for link in self.target_links:
            forms = self.extract_form(link)
            for form in forms:
                print("[+] Testing form in " + link)
                is_vulnerable_to_xss = self.test_xss_in_form(form,link)
                if is_vulnerable_to_xss:
                    print("\n\n[***] Xss Discovered in  "+ link + "in follwing form")
                    print(form)
        if "=" in link:
            print("\n\n[+] Testing"+link)
            is_vulnerable_to_xss = self.test_xss_in_link(link)
            if is_vulnerable_to_xss:
                print("[***] Discovered Xss in  " + link)

    def test_xss_in_link(self,url):
        xss_test_script = "<SCript>alert('xss')</scriPt>"
        url = url.replace("=","="+xss_test_script)
        response = self.session.get(url)
        return xss_test_script in response.content

    def test_xss_in_form(self,form,url):
        xss_test_script = "<sCript>alert('xss')</scriPt>"
        response = self.submit_form(form,xss_test_script,url)
        return xss_test_script in response.content
